export default ComponentWithSx;
declare const ComponentWithSx: import("@emotion/styled").StyledComponent<import("prop-types").InferPropsInner<Pick<{
    id: import("prop-types").Requireable<string>;
    label: import("prop-types").Requireable<any>;
    name: import("prop-types").Requireable<string>;
    onClick: import("prop-types").Requireable<(...args: any[]) => any>;
    component: import("prop-types").Requireable<any>;
    to: import("prop-types").Requireable<any>;
    variant: import("prop-types").Requireable<string>;
    isSelect: import("prop-types").Requireable<any>;
    type: import("prop-types").Requireable<string>;
    disableElevation: import("prop-types").Requireable<any>;
    disabled: import("prop-types").Requireable<boolean>;
    fullWidth: import("prop-types").Requireable<any>;
    minWidth: import("prop-types").Requireable<string>;
    startIcon: import("prop-types").Requireable<any>;
    endIcon: import("prop-types").Requireable<any>;
    style: import("prop-types").Requireable<any>;
    loading: import("prop-types").Requireable<any>;
    isOutlined: import("prop-types").Requireable<boolean>;
}, never>> & Partial<import("prop-types").InferPropsInner<Pick<{
    id: import("prop-types").Requireable<string>;
    label: import("prop-types").Requireable<any>;
    name: import("prop-types").Requireable<string>;
    onClick: import("prop-types").Requireable<(...args: any[]) => any>;
    component: import("prop-types").Requireable<any>;
    to: import("prop-types").Requireable<any>;
    variant: import("prop-types").Requireable<string>;
    isSelect: import("prop-types").Requireable<any>;
    type: import("prop-types").Requireable<string>;
    disableElevation: import("prop-types").Requireable<any>;
    disabled: import("prop-types").Requireable<boolean>;
    fullWidth: import("prop-types").Requireable<any>;
    minWidth: import("prop-types").Requireable<string>;
    startIcon: import("prop-types").Requireable<any>;
    endIcon: import("prop-types").Requireable<any>;
    style: import("prop-types").Requireable<any>;
    loading: import("prop-types").Requireable<any>;
    isOutlined: import("prop-types").Requireable<boolean>;
}, "variant" | "type" | "id" | "name" | "minWidth" | "loading" | "label" | "style" | "disabled" | "onClick" | "component" | "to" | "isSelect" | "disableElevation" | "fullWidth" | "startIcon" | "endIcon" | "isOutlined">>> & import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, {}, {}>;
